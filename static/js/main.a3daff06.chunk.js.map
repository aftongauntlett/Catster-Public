{"version":3,"sources":["components/Shared/Navbar/index.js","components/Views/CatsJumbo/index.js","components/Views/Home/index.js","components/Views/Discover/index.js","components/Views/Search/index.js","App.js","serviceWorker.js","index.js"],"names":["myNavbar","Navbar","style","fontFamily","bg","variant","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","Header","Jumbotron","Component","index","CatList","state","imageURL","search","users","score","love","getNewImage","randomNum","Math","floor","random","console","log","setState","pass","this","axios","then","resp","data","url","Card","Title","Body","Img","src","Text","Button","onClick","getRandomCat","breeds","selectedBreed","description","selectBreed","event","breed","rawBreeds","filter","name","target","value","getImage","map","preventDefault","breedImage","get","Form","onSubmit","image","onChange","type","list","placeholder","breedList","searchBreedCat","App","basename","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a3daff06.chunk.js","sourcesContent":["import React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\n\nfunction myNavbar() {\n  return (\n    <Navbar\n      style={{ fontFamily: \"Lexend Tera\" }}\n      bg=\"dark\"\n      variant=\"dark\"\n      expand=\"lg\"\n    >\n      <Navbar.Brand href=\"/\">Catster</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"#/discover\">Discover</Nav.Link>\n          <Nav.Link href=\"#/search\">Search</Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default myNavbar;\n","import React, { Component } from \"react\";\nimport \"./styles.css\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <Jumbotron className=\"imageJumbo\">\n        <h1>Catster</h1>\n        <p className=\"paragraph\">They are made of liquid.</p>\n      </Jumbotron>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport CatsJumbo from \"../CatsJumbo\";\nimport \"./styles.css\";\n\nexport default class index extends Component {\n  render() {\n    return (\n      <div>\n        <CatsJumbo />\n        <div className=\"homeBlurb\">\n          <p>Welcome to Catster!</p>\n          <p>\n            Use this app to see some kitties, click love or hate depending on how you feel. <br></br>There is a chance the cat will\n            be your friend, too...but let's be honest - they probably won't. \n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./styles.css\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default class CatList extends Component {\n  state = {\n    imageURL: \"\",\n    search: \"\",\n    users: [],\n    score: 0,\n  };\n\n  componentDidMount() {\n    this.getNewImage();\n  }\n\n  getNewImage() {\n    axios(\"https://api.thecatapi.com/v1/images/search?limit=1\").then((resp) => {\n      this.setState({\n        imageURL: resp.data[0].url,\n      });\n    });\n  }\n\n  love = () => {\n    this.getNewImage();\n    const randomNum = Math.floor(Math.random() * 10);\n    console.log(randomNum);\n    if (randomNum <= 3) {\n      this.setState({\n        score: this.state.score + 1,\n      });\n    }\n  };\n\n  pass = () => {\n    this.getNewImage();\n  };\n\n  getRandomCat() {\n    return (\n      <Card className=\"catCard\">\n        <Card.Title>Admire the cat</Card.Title>\n        <Card.Body>\n          <Card.Img\n            className=\"discoverCatImg\"\n            variant=\"top\"\n            src={this.state.imageURL}\n          />\n          <Card.Text>Do you love this cat?</Card.Text>\n\n          <Button\n            onClick={this.love}\n            className=\"catButtonLeft\"\n            variant=\"success\"\n          >\n            Yes!\n          </Button>\n          <Button\n            onClick={this.pass}\n            className=\"catButtonRight\"\n            variant=\"danger\"\n          >\n            Nope.\n          </Button>\n          <Card.Text> {this.state.score} Cats tolerate you so far.</Card.Text>\n        </Card.Body>\n      </Card>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"d-flex justify-content-center\">{this.getRandomCat()}</div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./styles.css\";\nimport axios from \"axios\";\nimport Form from \"react-bootstrap/Form\";\nimport Card from \"react-bootstrap/Card\";\n\nexport default class index extends Component {\n  state = {\n    imageURL: \"\",\n    search: \"\",\n    breeds: [],\n    selectedBreed: {},\n    description: \"\",\n  };\n\n  componentDidMount() {\n    axios(\"https://api.thecatapi.com/v1/breeds\").then((resp) => {\n      this.setState({\n        breeds: resp.data.map((breed) => {\n          return breed.name;\n        }),\n        rawBreeds: resp.data,\n      });\n    });\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n  }\n\n  breedList() {\n    return this.state.breeds.map((breed) => {\n      return <option value={breed}></option>;\n    });\n  }\n\n  breedImage() {\n    return this.state.breeds.map((breedImage) => {\n      return <option value={breedImage}></option>;\n    });\n  }\n\n  getImage(breed) {\n    const url = \"https://api.thecatapi.com/v1/images/search?breed_ids=\" + breed;\n    axios.get(url).then((resp) => {\n      console.log(resp.data[0])\n      this.setState({\n        imageURL: resp.data[0].url,\n        description: resp.data[0].breeds[0].description,\n      });\n    });\n  }\n\n  selectBreed = (event) => {\n    const breed = this.state.rawBreeds.filter((breed) => {\n      return breed.name === event.target.value;\n    })[0];\n    if (breed) {\n      this.setState({\n        selectedBreed: breed,\n      });\n      this.getImage(breed.id);\n    }\n  };\n\n  image() {\n    if (this.state.imageURL !== \"\") {\n      return (\n        <Card.Img\n          className=\"breedImage\"\n          variant=\"top\"\n          src={this.state.imageURL}\n        />\n      );\n    }\n  }\n\n  searchBreedCat() {\n    return (\n      <Card className=\"catCard\">\n        <Form className=\"search\" onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            {this.image()}\n            <Card.Title>Breed Name:</Card.Title>\n            <input\n              onChange={this.selectBreed}\n              className=\"searchBar form-control\"\n              type=\"text\"\n              name=\"breed\"\n              list=\"breeds\"\n              placeholder=\"Search by Breed\"\n              id=\"breed\"\n            ></input>\n            <datalist id=\"breeds\">{this.breedList()}</datalist>\n          </div>\n\n          {/* description */}\n          <p>{this.state.description}</p>\n        </Form>\n\n      </Card>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"d-flex justify-content-center\">\n        {this.searchBreedCat()}\n      </div>\n    );\n  }\n}\n","import Navbar from \"./components/Shared/Navbar\";\nimport React from \"react\";\n\nimport Home from \"./components/Views/Home\";\nimport Discover from \"./components/Views/Discover\";\nimport Search from \"./components/Views/Search\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\n\nexport default function App() {\n  return (\n    <HashRouter basename=\"/\">\n      <Navbar />\n      <div>\n        <Switch>\n          <Route path=\"/discover\">\n            <Discover />\n          </Route>\n          <Route path=\"/search\">\n            <Search />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}